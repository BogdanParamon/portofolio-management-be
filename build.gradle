plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'checkstyle'
    id 'jacoco'
}

group = 'com.team2a'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web:2.7.9'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.8"
	reportsDirectory.set(layout.buildDirectory.dir("reports/jacoco"))
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
		csv.required.set(false)
		html.required.set(true)
	}
	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it,
					exclude: ['**/ProjectPortfolioManagementSystemApplication.class'])
		})
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.95
			}
		}
	}
}


checkstyle {
	ignoreFailures = true
	maxWarnings = 0
	toolVersion = '8.45.1'
	configFile = file('checkstyle.xml')
}

check.dependsOn(checkstyleMain, checkstyleTest)

test.finalizedBy(jacocoTestReport)